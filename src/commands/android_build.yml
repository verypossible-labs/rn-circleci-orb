description: Builds the Android app at the given path with the given build types. This should be run only after installing dependencies.

parameters:
  project_path:
    description: The path to the root of the Android project you want to build, relative to the root of the repository.
    type: string
    default: "./android"
  build_type:
    description: The build type to build. This is normally either "debug" or "release" but you may have custom build types configured for your app.
    type: string
    default: "release"
  bundle_type:
    description: The type of app to bundle, either 'aab' (Android App Bundles) or 'apk'. Google's recommendation is aab, which is the default.
    type: enum
    enum: ["aab", "apk"]
    default: "aab"

steps:
  - run:
      name: Create cache checksum files
      command: |
        mkdir -p ~/.tmp/checksumfiles
        find . -type f -name 'build.gradle' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/build.gradle
        find . -type f -name 'settings.gradle' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/settings.gradle

  - restore_cache:
      keys:
        - gradle-wrapper-{{ arch }}-{{ checksum "<<parameters.project_path>>/gradle/wrapper/gradle-wrapper.properties" }}-{{ .Environment.CACHE_VERSION }}

  - restore_cache:
      keys:
        - gradle-home-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/build.gradle" }}-{{ checksum "~/.tmp/checksumfiles/settings.gradle" }}-{{ .Environment.CACHE_VERSION }}

  - restore_cache:
      name: Restoring Gradle Build caches
      keys:
        - gradle-build-cache-{{ .Revision }}

  - run:
      name: Dispersing Gradle Build caches for restoring
      command: |
        [ -d ~/gradle-build-caches ] &&
          [ -n "$(ls -A ~/gradle-build-caches)" ] &&
          rm -rf ~/.gradle/caches/build-cache-* &&
          mkdir -p ~/.gradle/caches/ &&
          mv ~/gradle-build-caches/* ~/.gradle/caches/ || true

  - run:
      name: Downloading Gradle Dependencies
      command: "cd <<parameters.project_path>> && chmod +x gradlew && ./gradlew --max-workers 2 downloadDependencies"

  - save_cache:
      name: Saving Gradle wrapper cache
      paths:
        - ~/.gradle/wrapper/
      key: gradle-wrapper-{{ arch }}-{{ checksum "<<parameters.project_path>>/gradle/wrapper/gradle-wrapper.properties" }}-{{ .Environment.CACHE_VERSION }}

  - save_cache:
      name: Saving Gradle home cache
      paths:
        - ~/.gradle/caches/
      key: gradle-home-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/build.gradle" }}-{{ checksum "~/.tmp/checksumfiles/settings.gradle" }}-{{ .Environment.CACHE_VERSION }}

  - run:
      name: Start Metro Bundler (background)
      background: true
      command: npx react-native start

  # we bundle the JS and Assets separately to avoid memory heap issues when building the app
  - bundle_rn:
      platform: android
      bundle_output: android/app/build/generated/assets/react/release/index.android.bundle
      assets_dest: android/app/src/main/res

  # see: https://stackoverflow.com/questions/52652381/error-execution-failed-for-task-appmergereleaseresources-building-apk
  - run:
      name: Clean drawable folders
      command: rm -rf android/app/src/main/res/drawable-*

  - when:
      condition:
        equal: [aab, <<parameters.bundle_type>>]
      steps:
        - bundle_android_app:
            project_path: <<parameters.project_path>>
            build_type: <<parameters.build_type>>
            bundle_type: "bundle"

  - when:
      condition:
        equal: [apk, <<parameters.bundle_type>>]
      steps:
        - bundle_android_app:
            project_path: <<parameters.project_path>>
            build_type: <<parameters.build_type>>
            bundle_type: "assemble"

  - run:
      name: Collecting Gradle Build caches for saving
      command: |
        mkdir -p ~/gradle-build-caches
        [ -d ~/.gradle/caches ] &&
        [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
        rm -rf ~/gradle-build-caches/* &&
        mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
      when: always

  - save_cache:
      name: Saving Gradle Build caches
      paths:
        - ~/gradle-build-caches
      key: gradle-debug-build-cache-{{ .Revision }}
      when: always
